effective: |
  context:
  - /src
  - /Cargo.*
  builders:
  - name: builder
    from:
      path: clux/muslrust
      digest: sha256:a0ce98126e110dbba1e58e1ec75c3d3edcb7fd913517bd22e819cb91d01e8c68
    workdir: /app
    run:
    - cargo build --release -F cli -F permissive
    - mv target/x86_64-unknown-linux-musl/release/dofigen /tmp/
    cache:
    - /home/rust/.cargo
    - /app/target
    bind:
    - target: Cargo.toml
      from: null
      source: Cargo.toml
      readwrite: false
    - target: Cargo.lock
      from: null
      source: Cargo.lock
      readwrite: false
    - target: src/
      from: null
      source: src/
      readwrite: false
  workdir: /app
  artifacts:
  - builder: builder
    source: /tmp/dofigen
    target: /bin/
  entrypoint:
  - dofigen
  cmd:
  - --help
images:
  registry.hub.docker.com:443:
    clux:
      muslrust:
        stable:
          tag_last_pushed: 2024-08-20T13:37:06.688864Z
          digest: sha256:a0ce98126e110dbba1e58e1ec75c3d3edcb7fd913517bd22e819cb91d01e8c68
resources:
  dofigen.yml:
    hash: 2b908587c60779bc12f3e4d402e258ad8700ca11661ab262a4c0f8ea4c868424
    content: |
      ---
      builders:
        - name: builder
          from: clux/muslrust:stable
          workdir: /app
          bind:
            - Cargo.toml
            - Cargo.lock
            - src/
          run:
            # Build with musl to work with scratch
            - cargo build --release -F cli -F permissive
            # copy the generated binary outside of the target directory. If not the other stages won't be able to find it since it's in a cache volume
            - mv target/x86_64-unknown-linux-musl/release/dofigen /tmp/
          cache:
            # Cargo cache
            - /home/rust/.cargo
            # build cache
            - /app/target

      # Runtime
      workdir: /app
      artifacts:
        - builder: builder
          source: "/tmp/dofigen"
          target: "/bin/"
      entrypoint: dofigen
      cmd: --help
      context:
        - "/src"
        - "/Cargo.*"
