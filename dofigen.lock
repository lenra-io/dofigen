effective: |
  context:
  - /src
  - /Cargo.*
  builders:
    muslrust:
      fromImage:
        path: clux/muslrust
        digest: sha256:0f8cb0b597e8985ed840aaa09b726cb596036edc26235fabc8064966866b15fd
      workdir: /app
      run:
      - cargo build --release -F cli -F permissive
      - mv target/*-unknown-linux-musl/release/dofigen /tmp/
      cache:
      - target: /home/rust/.cargo
      - target: /app/target
      bind:
      - target: Cargo.toml
        source: Cargo.toml
      - target: Cargo.lock
        source: Cargo.lock
      - target: src/
        source: src/
  workdir: /app
  copy:
  - fromBuilder: muslrust
    paths:
    - /tmp/dofigen
    target: /bin/
  entrypoint:
  - dofigen
  cmd:
  - --help
images:
  registry.hub.docker.com:443:
    clux:
      muslrust:
        stable:
          digest: sha256:0f8cb0b597e8985ed840aaa09b726cb596036edc26235fabc8064966866b15fd
resources:
  dofigen.yml:
    hash: 4c4b7523ecd3a7f25d924f4176264f9fedf91b291d1ca0087339015125874acd
    content: |
      builders:
        muslrust:
          fromImage: clux/muslrust:stable
          workdir: /app
          bind:
            - Cargo.toml
            - Cargo.lock
            - src/
          run:
            # Build with musl to work with scratch
            - cargo build --release -F cli -F permissive
            # copy the generated binary outside of the target directory. If not the other stages won't be able to find it since it's in a cache volume
            - mv target/*-unknown-linux-musl/release/dofigen /tmp/
          cache:
            # Cargo cache
            - /home/rust/.cargo
            # build cache
            - /app/target

      # Runtime
      workdir: /app
      copy:
        - fromBuilder: muslrust
          paths: "/tmp/dofigen"
          target: "/bin/"
      entrypoint: dofigen
      cmd: --help
      context:
        - "/src"
        - "/Cargo.*"
